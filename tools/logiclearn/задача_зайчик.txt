n - ступеньки		2 3 4 5
k - max jump    

k    n	2	3	4	5	  6
1	1	1	1	1	  1
2	1+1	1+2	1+4	1+7	  1+12
3	===	1+2+1	1+4+2	1+7+5	  1+12+11
4	===	===	1+4+2+1	1+7+5+2	  1+12+11+5
5	===	===	===	1+7+5+2+1 1+12+11+5+2
6	===	===	===	===	  1+12+11+5+2+1

k / n	2	3	4	5	6	7
1	1	1	1	1	1	1
2	2	3	5	8	13	21
3	=	4	7	13	24	44
4	=	=	8	15	29	
5	=	=	=	16	31
6	=	=	=	=	32
7

count[0] = 1
count[1] = 1
count[2] = count[0] + count[1]
count[3] = count[0] + count[1] + count[2]
count[4] = count[0] + count[1] + count[2] + count[3]
count[3] == count[0] + count[1] + count[]

1 +
111112 + 111121 + 111211 + 11122 + 112111 + 11212 + 11221 + 121111 +
12112 + 12121 + 12211 + 1222 + 211111 + 21112 + 21121 + 21211 + 2122 +
22111 + 2212 + 2221

k = 1 (const 1)
k = 2 (fibonachi)
l = 3 (

if (N <= K || K === 1) { steps = 2^(K-1) }
if (N > K && K > 1) {
	steps = 2^(K-1) - (N-K)
}

2^(K-1) - 1  {N - K = 1}
2^(K-1) - 3  {N - K = 2}
2^(K-1) - 8  {N - K = 3}
2^(K-1) - 19 {N - K = 4}

x(n) = x(n-1)+x(n-2)+x(n-3)+x(n-k)

х(n) = sum(map(x, range(n-1; n-k + 1))

def x(a):
	if k == 1:
		return 1

x(2) = 1 + 1





from 1 to k

4 - from 1 to 3	 = 3, 2, 1
3 - from 1 to 3	 = 2, 1, !
2 - from 1 to 2  = 1, 0
1 - from

Таак, вижу тебе может понадобиться функция которой нету на википедии.
Пусть есть такое набор {1, 1, 1, 2, 3, 3, 3, 3}
И нужно понять сколькими способами можно их переставить.
Перестановки могут быть такими:
1 1 2 1 3 3 3 3
3 3 1 1 2 3 3 1
Без изменения количества чисел каждого номинала

Ответ:
8! / (3! * 1! * 4!)
Где
8 - длинна последовательности
3 - количество единичек
1 - количество двоек
4 - количество троек

Можешь использовать эту формулу как есть
