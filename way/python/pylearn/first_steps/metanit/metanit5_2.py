#! Работа с материалами Metanit, глава 5, часть 2.  Основные методы
# строк.

# isalpha(str): возвращает True, если строка состоит только из
# алфавитных символов.
# islower(str): возвращает True, если строка состоит только из символов
# в нижнем регистре.
# isuppper(str): возвращает True, если все символы строки в верхнем
# регистре.
# isdigit(str): возвращает True, если все символы строки - цифры.
# isnumeric(str): возвращает True, если строка представляет собой число.
# startwith(str): возвращает True, если строка начинается с подстроки
# str.
# endwith(str): возвращает True, если строка заканчивается на подстроку
# str.
# lower(): переводит строку в нижний регистр.
# upper(): переводит строку в вехний регистр.
# title(): начальные символы всех слов в строке переводятся в верхний
# регистр.
# capitalize(): переводит в верхний регистр первую букву только самого
# первого слова строки.
# lstrip(): удаляет начальные пробелы из строки.
# rstrip(): удаляет конечные пробелы из строки.
# strip(): удаляет начальные и конечные пробелы из строки.
# ljust(width): если длина строки меньше параметра width, то справа от
# строки добавляются пробелы, чтобы дополнить значение width, а сама
# строка выравнивается по левому краю.
# rjust(width): если длина строки меньше параметра width, то слева от
# строки добавляются пробелы, чтобы дополнить значение width, а сама
# строка выравнивается по правому краю.
# center(width): если длина строки меньше параметра width, то слева и
# справа от строки равномерно добавляются пробелы, чтобы дополнить
# значение width, а сама строка выравнивается по центру.
# find(str[, start [, end]): возвращает индекс подстроки в строке.  Если
# подстрока не найдена, возвращается число -1.
# replace(old, new[, num]): заменяет в строке одну подстроку на другую.
# split([delimeter[, num]]): разбивает строку на подстроки в зависимости
# от разделителя.
# join(strs): объединяет строки в одну строку, вставляя между ними
# определенный разделитель.

# Проверка на формат.
string = input("Введите число: ")
if string.isnumeric():
    print(int(string))

# Проверки на конец, начало строк
file_name = "hello.py"

starts_with_hello = file_name.startswith('hello')
ends_with_exe = file_name.endswith("exe")

# Обрезка пробелов.
string = "   hello world!  "
print(string.strip())

# Дополнение строки пробелами и выравнивание.
print("iPhone 7:", "52000".rjust(10))
print("Huawei P10:", "36000".rjust(10))

# Поиск в строке.
welcome = "Hello world! Goodbye world!"
print(welcome.find('wor'))  # 6
print(welcome.find('wor', 10))  # 21
print(welcome.find('wor', 10, 15))  # -1


# Замена в строке.
# replace(old, new): заменяет подстроку old на new.
# replace(old, new, num): параметр num указывает, сколько вхождений
# подстроки old надо заменить на new.

phone = "+1-234-567-89-10"
print(phone.replace("-", " "))      # Замена дефисов на пробелы.
print(phone.replace("-", ""))       # Удаление дефисов.
print(phone.replace("-", "", 1))    # Удаление первого дефиса.


# Разделение на подстроки.
# split(): в качестве разделителя используется пробел.
# split(delimeter): в качестве разделителя используется delimeter.
# split(delimeter, num): параметр num указывает, сколько вхождений
# delimeter используется для разделения.  Оставшаяся часть строки
# добавляется в список без разделения на подстроки.

text = "Это был огромный, в два обхвата дуб, с обломанными ветвями и" \
       "обломанной корой"

print(text.split())         # Разбиение по пробелам.
print(text.split()[6])      #   Дуб
print(text.split(","))      # Разбиение по запятым.
print(text.split(",")[1])   #   в два обхвата дуб
print(text.split(" ", 5))   # Разбиение по первым пяти пробелам.
print(text.split(" ", 5)[5])


# Соединение строк.
# Возможность для соединения строк представляет метод join(): он
# объединяет список строк.  Причем текущая строка, у которой вызывается
# данный метод, используется в качестве разделителя:

words = ["Let", "me", "speak", "from", "my", "heart", "in", "English"]

print(" ".join(words))      # Разделитель - пробел.
print(" | ".join(words))    # Разделитель - вертикальная черта.

word = "hello"
print("|".join(word))       # h|e|l|l|o
